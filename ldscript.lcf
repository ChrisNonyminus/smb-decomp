_SDA_BASE_ = 0x802F81E0;
_SDA2_BASE_ = 0x802FA800;
_stack_addr = 0x80306C80;

SECTIONS
{
    .init       BIND(0x80003100) : {}
    _extab      BIND(0x800054C0) : {}
    _extabindex BIND(0x80005B80) : {}
    .text       BIND(0x800065A0) : {}
    .ctors      BIND(0x8010F860) : {}
    .dtors      BIND(0x8010F880) : {}
    .rodata     BIND(0x8010F8A0) : {}
    .data       BIND(0x80172380) : {}
    .bss        BIND(0x801ED920) : {}
    .sdata      BIND(0x802F01E0) : {}
    .sbss       BIND(0x802F1AE0) : {}
    .sdata2     BIND(0x802F2800) : {}
}
FORCEACTIVE {
    unkData 
    g_avdisp_alloc_matrix_lists func_8008D8D0 load_model
    free_model
    func_8008E5F8 func_8008E64C func_8008E698
    mathutil_alignment
    memcard_data_padding
    lbl_8028FE58
    fontStrArray alignStrArray lbl_801C0B94 lbl_801C0D24
}

FORCEFILES { game.o __init_cpp_exceptions.o }

/* sprite.s */
lbl_802F4A70 = 0x802F4A70;
lbl_802F4A74 = 0x802F4A74;
lbl_802F4A78 = 0x802F4A78;
lbl_802F4A80 = 0x802F4A80;
lbl_801C1264 = 0x801C1264;
lbl_802F4A90 = 0x802F4A90;
lbl_802F4A98 = 0x802F4A98;
lbl_802F4AA4 = 0x802F4AA4;

/* background.s */
lbl_802F3CFC = 0x802F3CFC;
lbl_802F3D00 = 0x802F3D00;
lbl_802F3D08 = 0x802F3D08;

/* event.s */
lbl_802F28E4 = 0x802F28E4;
lbl_802F28D4 = 0x802F28D4;
lbl_802F28D8 = 0x802F28D8;
lbl_802F28E8 = 0x802F28E8;

lbl_802F28F0 = 0x802F28F0;
lbl_802F2910 = 0x802F2910;
lbl_802F2958 = 0x802F2958;
lbl_802F296C = 0x802F296C;
lbl_802F2970 = 0x802F2970;
lbl_802F2980 = 0x802F2980;

/* stage.s */
lbl_802F3720 = 0x802F3720;
lbl_802F3728 = 0x802F3728;
lbl_802F3730 = 0x802F3730;
lbl_802F3740 = 0x802F3740;
lbl_802F3750 = 0x802F3750;
lbl_802F3758 = 0x802F3758;
lbl_802F3760 = 0x802F3760;
lbl_802F3768 = 0x802F3768;
