.include "macros.inc"

.section .text, "ax"  # 0x800065A0 - 0x8010F860

.global OSRegisterResetFunction
OSRegisterResetFunction:
/* 800C7294 000C31B4  80 AD A1 40 */	lwz r5, ResetFunctionQueue@sda21(r13)
/* 800C7298 000C31B8  48 00 00 08 */	b lbl_800C72A0
lbl_800C729C:
/* 800C729C 000C31BC  80 A5 00 08 */	lwz r5, 8(r5)
lbl_800C72A0:
/* 800C72A0 000C31C0  28 05 00 00 */	cmplwi r5, 0
/* 800C72A4 000C31C4  41 82 00 14 */	beq lbl_800C72B8
/* 800C72A8 000C31C8  80 85 00 04 */	lwz r4, 4(r5)
/* 800C72AC 000C31CC  80 03 00 04 */	lwz r0, 4(r3)
/* 800C72B0 000C31D0  7C 04 00 40 */	cmplw r4, r0
/* 800C72B4 000C31D4  40 81 FF E8 */	ble lbl_800C729C
lbl_800C72B8:
/* 800C72B8 000C31D8  28 05 00 00 */	cmplwi r5, 0
/* 800C72BC 000C31DC  40 82 00 34 */	bne lbl_800C72F0
/* 800C72C0 000C31E0  38 AD A1 40 */	addi r5, r13, ResetFunctionQueue@sda21
/* 800C72C4 000C31E4  84 85 00 04 */	lwzu r4, 4(r5)
/* 800C72C8 000C31E8  28 04 00 00 */	cmplwi r4, 0
/* 800C72CC 000C31EC  40 82 00 0C */	bne lbl_800C72D8
/* 800C72D0 000C31F0  90 6D A1 40 */	stw r3, ResetFunctionQueue@sda21(r13)
/* 800C72D4 000C31F4  48 00 00 08 */	b lbl_800C72DC
lbl_800C72D8:
/* 800C72D8 000C31F8  90 64 00 08 */	stw r3, 8(r4)
lbl_800C72DC:
/* 800C72DC 000C31FC  90 83 00 0C */	stw r4, 0xc(r3)
/* 800C72E0 000C3200  38 00 00 00 */	li r0, 0
/* 800C72E4 000C3204  90 03 00 08 */	stw r0, 8(r3)
/* 800C72E8 000C3208  90 65 00 00 */	stw r3, 0(r5)
/* 800C72EC 000C320C  4E 80 00 20 */	blr
lbl_800C72F0:
/* 800C72F0 000C3210  90 A3 00 08 */	stw r5, 8(r3)
/* 800C72F4 000C3214  80 85 00 0C */	lwz r4, 0xc(r5)
/* 800C72F8 000C3218  90 65 00 0C */	stw r3, 0xc(r5)
/* 800C72FC 000C321C  28 04 00 00 */	cmplwi r4, 0
/* 800C7300 000C3220  90 83 00 0C */	stw r4, 0xc(r3)
/* 800C7304 000C3224  40 82 00 0C */	bne lbl_800C7310
/* 800C7308 000C3228  90 6D A1 40 */	stw r3, ResetFunctionQueue@sda21(r13)
/* 800C730C 000C322C  4E 80 00 20 */	blr
lbl_800C7310:
/* 800C7310 000C3230  90 64 00 08 */	stw r3, 8(r4)
/* 800C7314 000C3234  4E 80 00 20 */	blr

.global Reset
Reset:
/* 800C7318 000C3238  48 00 00 20 */	b lbl_800C7338
lbl_800C731C:
/* 800C731C 000C323C  7D 10 FA A6 */	mfspr r8, 0x3f0
/* 800C7320 000C3240  61 08 00 08 */	ori r8, r8, 8
/* 800C7324 000C3244  7D 10 FB A6 */	mtspr 0x3f0, r8
/* 800C7328 000C3248  4C 00 01 2C */	isync
/* 800C732C 000C324C  7C 00 04 AC */	sync 0
/* 800C7330 000C3250  60 00 00 00 */	nop
/* 800C7334 000C3254  48 00 00 08 */	b lbl_800C733C
lbl_800C7338:
/* 800C7338 000C3258  48 00 00 20 */	b lbl_800C7358
lbl_800C733C:
/* 800C733C 000C325C  7C AC 42 E6 */	mftb r5, 0x10c
lbl_800C7340:
/* 800C7340 000C3260  7C CC 42 E6 */	mftb r6, 0x10c
/* 800C7344 000C3264  7C E5 30 50 */	subf r7, r5, r6
/* 800C7348 000C3268  28 07 11 24 */	cmplwi r7, 0x1124
/* 800C734C 000C326C  41 80 FF F4 */	blt lbl_800C7340
/* 800C7350 000C3270  60 00 00 00 */	nop
/* 800C7354 000C3274  48 00 00 08 */	b lbl_800C735C
lbl_800C7358:
/* 800C7358 000C3278  48 00 00 20 */	b lbl_800C7378
lbl_800C735C:
/* 800C735C 000C327C  3D 00 CC 00 */	lis r8, 0xCC003000@h
/* 800C7360 000C3280  61 08 30 00 */	ori r8, r8, 0xCC003000@l
/* 800C7364 000C3284  38 80 00 03 */	li r4, 3
/* 800C7368 000C3288  90 88 00 24 */	stw r4, 0x24(r8)
/* 800C736C 000C328C  90 68 00 24 */	stw r3, 0x24(r8)
/* 800C7370 000C3290  60 00 00 00 */	nop
/* 800C7374 000C3294  48 00 00 08 */	b lbl_800C737C
lbl_800C7378:
/* 800C7378 000C3298  48 00 00 0C */	b lbl_800C7384
lbl_800C737C:
/* 800C737C 000C329C  60 00 00 00 */	nop
/* 800C7380 000C32A0  4B FF FF FC */	b lbl_800C737C
lbl_800C7384:
/* 800C7384 000C32A4  4B FF FF 98 */	b lbl_800C731C

.global __OSDoHotReset
__OSDoHotReset:
/* 800C7388 000C32A8  7C 08 02 A6 */	mflr r0
/* 800C738C 000C32AC  90 01 00 04 */	stw r0, 4(r1)
/* 800C7390 000C32B0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800C7394 000C32B4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800C7398 000C32B8  7C 7F 1B 78 */	mr r31, r3
/* 800C739C 000C32BC  4B FF ED 21 */	bl OSDisableInterrupts
/* 800C73A0 000C32C0  3C 60 CC 00 */	lis r3, 0xCC002000@ha
/* 800C73A4 000C32C4  38 63 20 00 */	addi r3, r3, 0xCC002000@l
/* 800C73A8 000C32C8  38 00 00 00 */	li r0, 0
/* 800C73AC 000C32CC  B0 03 00 02 */	sth r0, 2(r3)
/* 800C73B0 000C32D0  4B FF BC B1 */	bl ICFlashInvalidate
/* 800C73B4 000C32D4  57 E3 18 38 */	slwi r3, r31, 3
/* 800C73B8 000C32D8  4B FF FF 61 */	bl Reset
/* 800C73BC 000C32DC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800C73C0 000C32E0  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800C73C4 000C32E4  38 21 00 18 */	addi r1, r1, 0x18
/* 800C73C8 000C32E8  7C 08 03 A6 */	mtlr r0
/* 800C73CC 000C32EC  4E 80 00 20 */	blr

.global OSResetSystem
OSResetSystem:
/* 800C73D0 000C32F0  7C 08 02 A6 */	mflr r0
/* 800C73D4 000C32F4  90 01 00 04 */	stw r0, 4(r1)
/* 800C73D8 000C32F8  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 800C73DC 000C32FC  BF 41 00 20 */	stmw r26, 0x20(r1)
/* 800C73E0 000C3300  7C 7A 1B 78 */	mr r26, r3
/* 800C73E4 000C3304  7C 9E 23 78 */	mr r30, r4
/* 800C73E8 000C3308  7C BF 2B 78 */	mr r31, r5
/* 800C73EC 000C330C  48 00 18 D9 */	bl OSDisableScheduler
/* 800C73F0 000C3310  4B FF BA 55 */	bl __OSStopAudioSystem
/* 800C73F4 000C3314  48 00 00 04 */	b lbl_800C73F8
lbl_800C73F8:
/* 800C73F8 000C3318  48 00 00 04 */	b lbl_800C73FC
lbl_800C73FC:
/* 800C73FC 000C331C  83 8D A1 40 */	lwz r28, ResetFunctionQueue@sda21(r13)
/* 800C7400 000C3320  3B A0 00 00 */	li r29, 0
/* 800C7404 000C3324  48 00 00 04 */	b lbl_800C7408
lbl_800C7408:
/* 800C7408 000C3328  48 00 00 04 */	b lbl_800C740C
lbl_800C740C:
/* 800C740C 000C332C  48 00 00 24 */	b lbl_800C7430
lbl_800C7410:
/* 800C7410 000C3330  38 60 00 00 */	li r3, 0
/* 800C7414 000C3334  81 9C 00 00 */	lwz r12, 0(r28)
/* 800C7418 000C3338  7D 88 03 A6 */	mtlr r12
/* 800C741C 000C333C  4E 80 00 21 */	blrl
/* 800C7420 000C3340  7C 60 00 34 */	cntlzw r0, r3
/* 800C7424 000C3344  83 9C 00 08 */	lwz r28, 8(r28)
/* 800C7428 000C3348  54 00 D9 7E */	srwi r0, r0, 5
/* 800C742C 000C334C  7F BD 03 78 */	or r29, r29, r0
lbl_800C7430:
/* 800C7430 000C3350  28 1C 00 00 */	cmplwi r28, 0
/* 800C7434 000C3354  40 82 FF DC */	bne lbl_800C7410
/* 800C7438 000C3358  48 00 0A ED */	bl __OSSyncSram
/* 800C743C 000C335C  7C 60 00 34 */	cntlzw r0, r3
/* 800C7440 000C3360  54 00 D9 7E */	srwi r0, r0, 5
/* 800C7444 000C3364  7F BD 03 78 */	or r29, r29, r0
/* 800C7448 000C3368  2C 1D 00 00 */	cmpwi r29, 0
/* 800C744C 000C336C  41 82 00 0C */	beq lbl_800C7458
/* 800C7450 000C3370  38 00 00 00 */	li r0, 0
/* 800C7454 000C3374  48 00 00 08 */	b lbl_800C745C
lbl_800C7458:
/* 800C7458 000C3378  38 00 00 01 */	li r0, 1
lbl_800C745C:
/* 800C745C 000C337C  2C 00 00 00 */	cmpwi r0, 0
/* 800C7460 000C3380  41 82 FF 9C */	beq lbl_800C73FC
/* 800C7464 000C3384  2C 1A 00 00 */	cmpwi r26, 0
/* 800C7468 000C3388  41 82 00 38 */	beq lbl_800C74A0
/* 800C746C 000C338C  2C 1F 00 00 */	cmpwi r31, 0
/* 800C7470 000C3390  41 82 00 30 */	beq lbl_800C74A0
/* 800C7474 000C3394  48 00 06 A9 */	bl __OSLockSram
/* 800C7478 000C3398  88 03 00 13 */	lbz r0, 0x13(r3)
/* 800C747C 000C339C  60 00 00 40 */	ori r0, r0, 0x40
/* 800C7480 000C33A0  98 03 00 13 */	stb r0, 0x13(r3)
/* 800C7484 000C33A4  38 60 00 01 */	li r3, 1
/* 800C7488 000C33A8  48 00 0A 55 */	bl __OSUnlockSram
/* 800C748C 000C33AC  48 00 00 04 */	b lbl_800C7490
lbl_800C7490:
/* 800C7490 000C33B0  48 00 00 04 */	b lbl_800C7494
lbl_800C7494:
/* 800C7494 000C33B4  48 00 0A 91 */	bl __OSSyncSram
/* 800C7498 000C33B8  2C 03 00 00 */	cmpwi r3, 0
/* 800C749C 000C33BC  41 82 FF F8 */	beq lbl_800C7494
lbl_800C74A0:
/* 800C74A0 000C33C0  4B FF EC 1D */	bl OSDisableInterrupts
/* 800C74A4 000C33C4  83 AD A1 40 */	lwz r29, ResetFunctionQueue@sda21(r13)
/* 800C74A8 000C33C8  7C 7B 1B 78 */	mr r27, r3
/* 800C74AC 000C33CC  3B 80 00 00 */	li r28, 0
/* 800C74B0 000C33D0  48 00 00 04 */	b lbl_800C74B4
lbl_800C74B4:
/* 800C74B4 000C33D4  48 00 00 04 */	b lbl_800C74B8
lbl_800C74B8:
/* 800C74B8 000C33D8  48 00 00 24 */	b lbl_800C74DC
lbl_800C74BC:
/* 800C74BC 000C33DC  38 60 00 01 */	li r3, 1
/* 800C74C0 000C33E0  81 9D 00 00 */	lwz r12, 0(r29)
/* 800C74C4 000C33E4  7D 88 03 A6 */	mtlr r12
/* 800C74C8 000C33E8  4E 80 00 21 */	blrl
/* 800C74CC 000C33EC  7C 60 00 34 */	cntlzw r0, r3
/* 800C74D0 000C33F0  83 BD 00 08 */	lwz r29, 8(r29)
/* 800C74D4 000C33F4  54 00 D9 7E */	srwi r0, r0, 5
/* 800C74D8 000C33F8  7F 9C 03 78 */	or r28, r28, r0
lbl_800C74DC:
/* 800C74DC 000C33FC  28 1D 00 00 */	cmplwi r29, 0
/* 800C74E0 000C3400  40 82 FF DC */	bne lbl_800C74BC
/* 800C74E4 000C3404  48 00 0A 41 */	bl __OSSyncSram
/* 800C74E8 000C3408  2C 1A 00 01 */	cmpwi r26, 1
/* 800C74EC 000C340C  40 82 00 28 */	bne lbl_800C7514
/* 800C74F0 000C3410  4B FF EB CD */	bl OSDisableInterrupts
/* 800C74F4 000C3414  3C 60 CC 00 */	lis r3, 0xCC002000@ha
/* 800C74F8 000C3418  38 63 20 00 */	addi r3, r3, 0xCC002000@l
/* 800C74FC 000C341C  38 00 00 00 */	li r0, 0
/* 800C7500 000C3420  B0 03 00 02 */	sth r0, 2(r3)
/* 800C7504 000C3424  4B FF BB 5D */	bl ICFlashInvalidate
/* 800C7508 000C3428  57 C3 18 38 */	slwi r3, r30, 3
/* 800C750C 000C342C  4B FF FE 0D */	bl Reset
/* 800C7510 000C3430  48 00 00 58 */	b lbl_800C7568
lbl_800C7514:
/* 800C7514 000C3434  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800C7518 000C3438  80 63 00 DC */	lwz r3, 0x800000DC@l(r3)
/* 800C751C 000C343C  48 00 00 04 */	b lbl_800C7520
lbl_800C7520:
/* 800C7520 000C3440  48 00 00 04 */	b lbl_800C7524
lbl_800C7524:
/* 800C7524 000C3444  48 00 00 2C */	b lbl_800C7550
lbl_800C7528:
/* 800C7528 000C3448  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 800C752C 000C344C  83 83 02 FC */	lwz r28, 0x2fc(r3)
/* 800C7530 000C3450  2C 00 00 04 */	cmpwi r0, 4
/* 800C7534 000C3454  41 82 00 14 */	beq lbl_800C7548
/* 800C7538 000C3458  40 80 00 14 */	bge lbl_800C754C
/* 800C753C 000C345C  2C 00 00 01 */	cmpwi r0, 1
/* 800C7540 000C3460  41 82 00 08 */	beq lbl_800C7548
/* 800C7544 000C3464  48 00 00 08 */	b lbl_800C754C
lbl_800C7548:
/* 800C7548 000C3468  48 00 1C 91 */	bl OSCancelThread
lbl_800C754C:
/* 800C754C 000C346C  7F 83 E3 78 */	mr r3, r28
lbl_800C7550:
/* 800C7550 000C3470  28 03 00 00 */	cmplwi r3, 0
/* 800C7554 000C3474  40 82 FF D4 */	bne lbl_800C7528
/* 800C7558 000C3478  48 00 17 AD */	bl OSEnableScheduler
/* 800C755C 000C347C  7F C3 F3 78 */	mr r3, r30
/* 800C7560 000C3480  7F E4 FB 78 */	mr r4, r31
/* 800C7564 000C3484  4B FF FB 81 */	bl __OSReboot
lbl_800C7568:
/* 800C7568 000C3488  7F 63 DB 78 */	mr r3, r27
/* 800C756C 000C348C  4B FF EB 79 */	bl OSRestoreInterrupts
/* 800C7570 000C3490  48 00 17 95 */	bl OSEnableScheduler
/* 800C7574 000C3494  BB 41 00 20 */	lmw r26, 0x20(r1)
/* 800C7578 000C3498  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 800C757C 000C349C  38 21 00 38 */	addi r1, r1, 0x38
/* 800C7580 000C34A0  7C 08 03 A6 */	mtlr r0
/* 800C7584 000C34A4  4E 80 00 20 */	blr

.section .sbss

.global ResetFunctionQueue
ResetFunctionQueue:
	.skip 0x8
